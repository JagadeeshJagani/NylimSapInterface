
	@{
		ViewBag.Title = "Company Frequency";
	}
	@section featured {
	}
	<script type="text/javascript">
	    function onRequestEnd(e) {
	        if (e.type == "update" && !e.response.errors) {
	            common.showSuccessMsgSlide("Wso2Sap Company Frequency Updated Successfully!");
	        }
	        if (e.type == "create" && !e.response.errors) {
	            common.showSuccessMsgSlide("Wso2Sap Company Frequency Created Successfully!");
	            $("#grid").data("kendoGrid").dataSource.read(getSelectedInterface());
	        }
	        if (e.type == "destroy" && !e.response.errors) {
	            common.showSuccessMsgSlide("Wso2Sap Company Frequency Removed Successfully!");
	            $("#grid").data("kendoGrid").dataSource.read();
	        }
	    }

	    function deleteRule() {
	        var myGrid = $('#grid').data("kendoGrid");

	        if (myGrid.select().length == 0) {
	            alert("Select record to be removed!");
	            return false;
	        }
	        myGrid.removeRow(myGrid.select());
	    }
	    function dataBound(e) {
	        $("#grid").off("click", ".k-grid-Delete", deleteRule);
	        $("#grid").on("click", ".k-grid-Delete", deleteRule);
	    }

	    function onSave(e) {
	        if (e.model.id != e.model.CompanyCode) {
	            if (!checkDup(this, e.model.CompanyCode)) {
	                alert("CompanyCode already exists!");
	                e.preventDefault();
	            }
	        }
	    }

	    function checkDup(obj, value) {
	        var data = obj.dataSource.data();
	        var invalid = 0;
	        $(data).each(function (i, item) {
	            if (item.id == value) {
	                invalid++;
	            }
	        });
	        if (invalid > 0) {
	            return false;
	        }
	        return true;
	    }

	    function onEdit(e) {
	        e.container.find('.k-numerictextbox').width(100);
	        if (e.model.isNew() == false) {
	            e.container.find('#CompanyCode').prop("readonly", true);
	        }
	    }
	</script>
	<div id="contentContainer">
	  
		 
			   
	<br />
	<br />
	  
	@(Html.Kendo().Grid<NylimSapInterface.Model.Ivt2SapCompanyFrequency>()
		.Name("grid")
		.Groupable()
		.Resizable(resize => resize.Columns(true))    
		.Scrollable(scrollable => scrollable.Virtual(true))
		.Events(e => e.DataBound("dataBound").Save("onSave").Edit("onEdit"))
		.Editable(e => e.Mode(GridEditMode.PopUp).TemplateName("Wso2SapCompanyFrequencyTemplate"))
		.Sortable()
		.Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
		.Filterable(f => f.Enabled(true))
		.Columns(columns =>
		{
			columns.Bound(p => p.CompanyCode).Groupable(false).Width(80);
			columns.Bound(p => p.FrequencyIndicator).Width(80);       

		})
		 .ToolBar(toolbar =>
		{
			toolbar.Template(
				@<text>
						<a class="k-button k-button-icontext k-grid-add" href="/SapGuiInterface/ReferenceData/GetWso2SapCompanyFrequency?grid-mode=insert"><span class="k-icon k-add"></span>Create Frequency Indicator</a>
						@*<a class="k-button k-button-icontext k-grid-Delete" href="#"><span></span>Delete</a> *@ 
						<a class="k-button k-button-icontext k-grid-export" href='@Url.Action("Wso2SapCompanyFrequencyToExcel", "ReferenceData")'>
							<span>
							</span>
							<span class=" k-icon k-grid-export-image"/>Export
						</a>   
						   
				</text>);
			})
		//.ToolBar(toolbar => { 
		//    toolbar.Create().Text("Create Frequency Indicator");
		//    toolbar.Custom().Text("Delete").Name("Delete").Url("#");
		//})
		.DataSource(dataSource => dataSource
			.Ajax()
					.Model(m =>
					{                                 
						m.Id("CompanyCode");
					})
			.Events(e => e.RequestEnd("onRequestEnd"))
			.Create(update => update.Action("SaveWso2CompanyFrequency", "ReferenceData"))
			.Update(update => update.Action("UpdateWso2CompanyFrequency", "ReferenceData"))
			.Destroy(destroy => destroy.Action("DeleteWso2CompanyFrequency", "ReferenceData"))
			.PageSize(40)
			.ServerOperation(true)
				.Read(read => read.Action("GetWso2SapCompanyFrequency", "ReferenceData"))
		)
	)
	</div>
	<script type="text/javascript">
	    var securityModel = common.permissionSet;
	    if (securityModel.HasWSO2SAP_EDIT_RULE_Access) {
	        $('#grid').data("kendoGrid").element.delegate("tbody>tr", "dblclick", function () {
	            $('#grid').data("kendoGrid").editRow($(this));
	        });
	    }

		
	</script>
